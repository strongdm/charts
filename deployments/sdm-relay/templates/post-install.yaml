{{- if .Values.strongdm.autoRegisterCluster.enabled }}
{{- if not (or .Values.strongdm.auth.secretName .Values.strongdm.auth.adminToken) }}
{{- fail "one of @strongdm.auth.adminToken or @strongdm.auth.secretName must be set when @strongdm.autoRegisterCluster.enabled during installation." }}
{{- end }}

{{- if (or .Values.strongdm.autoRegisterCluster.identitySet .Values.strongdm.autoRegisterCluster.identitySetName) }}
{{- if (not .Values.strongdm.healthcheckUsername) }}
{{- fail "@strongdm.healthcheckUsername must be set when either @strongdm.autoRegisterCluster.identitySet or @strongdm.autoRegisterCluster.identitySetName are set during installation." }}
{{- end }}
{{ if (not .Values.strongdm.discoveryUsername) }}
{{- fail "@strongdm.discoveryUsername must be set when either @strongdm.autoRegisterCluster.identitySet or @strongdm.autoRegisterCluster.identitySetName are set during installation." }}
{{- end }}
{{- end }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "strongdm.name" . }}-register-cluster
  namespace: {{ include "strongdm.namespace" . }}
  annotations:
    helm.sh/hook: post-install
    helm.sh/hook-weight: "-1"
    helm.sh/hook-delete-policy: hook-succeeded
    {{- include "strongdm.annotations" . | nindent 4 }}
  labels:
    {{- include "strongdm.labels" . | nindent 4 }}
spec:
  completions: 1
  parallelism: 1
  backoffLimit: 3
  ttlSecondsAfterFinished: 300
  template:
    metadata:
      annotations:
        {{- include "strongdm.annotations" (merge (dict "addtl" .Values.strongdm.pod.annotations) .) | nindent 8 }}
      labels:
        {{- include "strongdm.labels" (merge (dict "addtl" .Values.strongdm.pod.labels) .) | nindent 8 }}
    spec:
      restartPolicy: Never
      containers:
        - name: sdm
          image: {{ template "strongdm.imageURI" . }}
          imagePullPolicy: {{ .Values.strongdm.image.pullPolicy }}
          resources:
            requests:
              memory: 256Mi
              cpu: 256m
            limits:
              memory: 256Mi
          env:
            - name: SDM_ADMIN_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ default (printf "%s-secrets" (include "strongdm.name" .)) .Values.strongdm.auth.secretName }}
                  key: SDM_ADMIN_TOKEN
          envFrom:
            - configMapRef:
                name: {{ include "strongdm.name" . }}-config
          command:
            - /bin/bash
            - -c
            - |
              /sdm.linux login --admin-token="${SDM_ADMIN_TOKEN}"
              /sdm.linux admin clusters add k8spodidentity \
                --certificate-authority /var/run/secrets/kubernetes.io/serviceaccount/ca.crt \
                {{- include "strongdm.autoRegisterClusterArgs" . | nindent 16 }} \
                {{ .Values.strongdm.autoRegisterCluster.extraArgs }} \
                {{ default (printf "%s-cluster-%s" (include "strongdm.name" .) (randAlpha 5)) .Values.strongdm.autoRegisterCluster.resourceName }}
{{- end}}
