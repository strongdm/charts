global:
  ## Metadata applied to all resources.
  ##
  ## @param global.addDateLabel - Adds a 'date: {{ now | htmlDate }}' label to all resources.
  ## @param global.annotations - Map of annotations to add to all resources.
  ## @param global.labels - Map of labels to add to all resources.
  ##
  addDateLabel: true
  annotations: {}
  labels: {}

strongdm:
  ## Image pull configuration.
  ##
  ## @param strongdm.image - Container repository and pull config.
  ##
  image:
    imagePullPolicy: IfNotPresent
    repository: public.ecr.aws/strongdm/relay
    tag: latest
    digest: ""

  ## General configuration.
  ##
  ## @param strongdm.config.domain - Control plane domain to which to connect. Format `uk.strongdm.com`, etc.
  ## @param strongdm.config.configMapName - k8s ConfigMap storing additional configuration values. Please review the docs for the required format of these values.
  ## @param strongdm.config secretName - k8s Secret storing additional configuration values. Please review the docs for the required format of these values.
  ## @param strongdm.config.extraCommandLineArgs - Space-separated string of additional args to pass to the relay startup command. Format `--key1=value1 --key2 value2`.
  ## @param strongdm.config.logOptions - Configuration for container logs.
  ##
  config:
    domain: strongdm.com
    configMapName: ""
    secretName: ""
    extraCommandLineArgs: ""
    logOptions:
      format: json
      storage: stdout
      encryption: plaintext

  ## StrongDM authentication sources. At least one of the following must be provided.
  ##
  ## @param global.token - The SDM_RELAY_TOKEN with which this relay should authenticate itself. Specify this directly, or provide an existing secret to strongdm.auth.tokenSecret.
  ## @param global.tokenSecret - Name of the k8s Secret that contains SDM_RELAY_TOKEN.
  ##
  auth:
    token: ""
    tokenSecret: ""

  ## Gateway configuration.
  ##
  ## @param strongdm.gateway.enabled - Whether this is to be a StrongDM Gateway. If false, a Relay is created, and all other strongdm.gateway values are ignored.
  ## @param strongdm.gateway.listenAddress - Address to which to register this gateway. Generally should be reachable from outside the cluster.
  ##
  gateway:
    enabled: false
    listenAddress: ""

    ## Service configuration.
    ##
    ## @param strongdm.gateway.service.annotations - Map of annotations to apply to the service.
    ## @param strongdm.gateway.service.labels - Map of labels to apply to the service.
    ## @param strongdm.gateway.service.type - Specify the type of service to front the deployment.
    ## @param strongdm.gateway.service.port - Port on which the container runs.
    ## @param strongdm.gateway.service.listenPort - Port to expose via the service.
    ## @param strongdm.gateway.service.nodePort - NodePort to which to bind this service, if desired.
    ##
    service:
      annotations: {}
      labels: {}
      type: ClusterIP
      port: 5000
      listenPort: 5000
      nodePort: ""

  ## Deployment configuration.
  ##
  ## @param strongdm.deployment.annotations - Map of annotations to add to the Deployment.
  ## @param strongdm.deployment.labels - Map of labels to add to the Deployment.
  deployment:
    annotations: {}
    labels: {}

  ## Pod configuration.
  ##
  ## @param strongdm.pod.resources - Set the Pod resource requests and limits.
  ## @param strongdm.pod.annotations - Map of annotations to add to Pods.
  ## @param strongdm.pod.labels - Map of labels to add to Pods.
  pod:
    resources: {}
    annotations: {}
    labels: {}
    livenessPort: 9090

  ## Service account configuration. Required when this deployment must interact with external APIs, like AWS Secrets Manager, Azure Key Vault, etc.
  ##
  ## @param strongdm.serviceAccount - Configuration for the k8s service account if chosen to be created by this Chart.
  ##
  serviceAccount:
    create: false
    name: strongdm
    automountToken: true
    annotations: {}
    labels: {}
