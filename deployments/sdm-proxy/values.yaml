# required. specify the name of a Secret containing the following environment variables:
#  SDM_PROXY_CLUSTER_ACCESS_KEY: e.g. pk-4e172ba367007f0c
#  SDM_PROXY_CLUSTER_SECRET_KEY: <...>
proxyClusterKeySecretRef: proxy-cluster-key

# required resource limits
resources:
  limits:
    cpu: 2
    memory: 4Gi
  requests:
    cpu: 2
    memory: 4Gi

service:
  type: LoadBalancer
  port: 443
  # loadBalancerIP:
  annotations:
    # Example annotations for AWS. For more info see https://github.com/kubernetes-sigs/aws-load-balancer-controller
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-target-group-attributes: preserve_client_ip.enabled=true
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing

deployment:
  # (Optional) adds additional annotations to the deployment and pod template
  annotations:

  # (Optional) adds additional labels to the deployment and pod template. These
  # are not used as part of the selector
  labels:

  # Extra environment variables. Options can be found here:
  # https://www.strongdm.com/docs/architecture/deployment/environment-variables
  env: 
    SDM_BIND_ADDRESS: ":8443"
    SDM_DOCKERIZED: "true"
    SDM_ORCHESTRATOR_PROBES: ":9090"
    # SDM_RELAY_LOG_FORMAT: "json"
    # SDM_RELAY_LOG_STORAGE: "stdout"
    # SDM_RELAY_LOG_ENCRYPTION: "plaintext"

  # (Optional) extra Secrets or ConfigMaps to load into the environment.
  envFrom:
    # - configMapRef:
    #     name: my-config
    # - secretRef:
    #     name: my-secret

# Optional ServiceAccount. For example, when using Azure Workload Identity to
# grant access to an Azure Key Vault Secret Store, ServiceAccount annotations
# and labels are required.
# (https://azure.github.io/azure-workload-identity/docs/quick-start.html#5-create-a-kubernetes-service-account)

# serviceAccount:
#   annotations:
#     foo: bar
#   labels:
#     bar: foo
