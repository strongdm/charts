global:
  ## Metadata applied to all resources.
  ##
  ## @param global.addDateLabel - Adds a 'date: {{ now | htmlDate }}' label to all resources.
  ## @param global.annotations - Map of annotations to add to all resources.
  ## @param global.labels - Map of labels to add to all resources.
  ##
  addDateLabel: true
  annotations: {}
  labels: {}

strongdm:
  ## Allow some overrides. Useful when installing as a subchart.
  ##
  ## @param strongdm.nameOverride - Override resource names.
  ## @param strongdm.namespaceOverride - Override the release namespace.
  ##
  nameOverride: ""
  namespaceOverride: ""

  ## Image pull configuration.
  ##
  ## @param strongdm.image - Container repository and pull config. If @strongdm.image.tag or @strongdm.image.digest are set, SDM_DISABLE_UPDATE is set to `true`.
  ##
  image:
    pullPolicy: IfNotPresent
    repository: public.ecr.aws/strongdm/relay
    tag: latest
    digest: ""

  ## General configuration.
  ##
  ## @param strongdm.config.domain - Control plane domain to which to connect. Format `uk.strongdm.com`, etc.
  ## @param strongdm.config.disableAutoUpdate - Disable automatically checking for and applying updates. Implicitly set to `true` if @strongdm.image.tag or @strongdm.image.digest are supplied.
  ## @param strongdm.config.maintenanceWindowStart - Hour of the day (0-23 UTC) to terminate connections and restart when applying updates.
  ## @param strongdm.config.enableMetrics - Enable Prometheus metrics on port 9999.
  ## @param strongdm.config.logOptions - Configuration for container logs.
  ##
  config:
    domain: strongdm.com
    disableAutoUpdate: false
    maintenanceWindowStart: 0
    enableMetrics: false
    logOptions:
      format: json
      storage: stdout
      encryption: plaintext

  ## Auto registration configuration. Requires SDM_ADMIN_TOKEN be provided via one of the supported @strongdm.auth methods.
  ##
  ## @param strongdm.autoRegisterCluster.enabled - Register this k8s cluster as a StrongDM Pod Identity Cluster. See https://www.strongdm.com/docs/admin/resources/clusters/kubernetes-podidentity/ for more information.
  ## @param strongdm.autoRegisterCluster.resourceName - Name of the StrongDM Pod Identity Cluster resource to create.
  ## @param strongdm.autoRegisterCluster.extraArgs - Space-separated string of args to pass to the `sdm admin clusters add k8spodidentity` command.
  ##
  autoRegisterCluster:
    enabled: false
    resourceName: ""
    extraArgs: ""

  ## StrongDM authentication sources.
  ##
  ## @param strongdm.auth.clusterKey - The SDM_PROXY_CLUSTER_ACCESS_KEY with which this proxy should authenticate itself. Specify this directly, or provide an existing secret to @strongdm.auth.secretName.
  ## @param strongdm.auth.clusterSecret - The SDM_PROXY_CLUSTER_SECRET_KEY with which this proxy should authenticate itself. Specify this directly, or provide an existing secret to @strongdm.auth.secretName.
  ## @param strongdm.auth.adminToken - The SDM_ADMIN_TOKEN with which to create StrongDM resources. Specify this directly, or provide an existing secret to @strongdm.auth.secretName.
  ## @param strongdm.auth.secretName - Name of the k8s Secret that contains SDM_PROXY_CLUSTER_ACCESS_KEY and SDM_PROXY_CLUSTER_SECRET_KEY, and/or SDM_ADMIN_TOKEN.
  auth:
    clusterKey: ""
    clusterSecret: ""
    adminToken: ""
    secretName: ""

  ## Service configuration.
  ##
  ## @param strongdm.service.annotations - Map of annotations to apply to the Service.
  ## @param strongdm.service.labels - Map of labels to apply to the Service.
  ## @param strongdm.service.type - Specify the type of Service to front the deployment.
  ## @param strongdm.containerPort - Port on which the container runs.
  ## @param strongdm.listenPort - Port on which the Service is expecting traffic.
  ## @param strongdm.service.nodePort - NodePort to which to bind this service, if desired.
  ## @param strongdm.service.loadBalancerIP - IP address to which to pin a LoadBalancer Service.
  ##
  service:
    annotations: {}
    labels: {}
    type: ClusterIP
    listenPort: 443
    containerPort: 8443
    nodePort: 0
    loadBalancerIP: ""

  ## Deployment configuration.
  ##
  ## @param strongdm.deployment.annotations - Map of annotations to add to the Deployment.
  ## @param strongdm.deployment.labels - Map of labels to add to the Deployment.
  ## @param strongdm.compute.replicaCount - Number of Pods to run in the deployment.
  ## @param strongdm.compute.topologySpreadConstraints - Pod spread constraints. See https://kubernetes.io/docs/concepts/scheduling-eviction/topology-spread-constraints/ for more info.
  deployment:
    annotations: {}
    labels: {}
    replicaCount: 2
    topologySpreadConstraints:
      maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway

  ## Pod configuration.
  ##
  ## @param strongdm.pod.annotations - Map of annotations to add to Pods.
  ## @param strongdm.pod.labels - Map of labels to add to Pods.
  ## @param strongdm.pod.resources - Set the Pod resource requests and limits.
  pod:
    annotations: {}
    labels: {}
    resources:
      requests:
        memory: 2560Mi
        cpu: 1024m
      limits:
        memory: 2560Mi

  ## Service account configuration.
  ##
  ## @param strongdm.serviceAccount.create - Create a ServiceAccount. Set to true, or specify and existing ServiceAccount with @strongdm.serviceAccount.name. Do neither to not create a ServiceAccount.
  ## @param strongdm.serviceAccount.name - Name of an existing ServiceAccount to use.
  ## @param strongdm.serviceAccount.annotations - Map of annotations to add to the ServiceAccount, should one be created.
  ## @param strongdm.serviceAccount.labels - Map of labels to add to the ServiceAccount, should one be created.
  ##
  serviceAccount:
    create: false
    name: ""
    annotations: {}
    labels: {}
